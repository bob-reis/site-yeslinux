name: Tests and Coverage

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  security-events: write

jobs:
  test:
    name: Test and Validate
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Shallow clones should be disabled for better relevancy of analysis

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: |
        if [ -f "package-lock.json" ]; then
          npm ci || npm install
        else
          npm install
        fi

    - name: Run ESLint
      run: npm run lint

    - name: Run type checking
      run: npx tsc --noEmit

    - name: Verify test dependencies
      run: |
        echo "Checking if vitest is available..."
        if ! npx vitest --version > /dev/null 2>&1; then
          echo "❌ Vitest not found, installing dependencies..."
          npm install
        else
          echo "✅ Vitest found"
        fi
    
    - name: Run tests with coverage
      run: npm test

    - name: Enforce module coverage (Maturidade >= 80%)
      run: npm run ci:maturidade-coverage

    - name: Check coverage threshold
      run: |
        if [ -f "coverage/coverage-summary.json" ]; then
          echo "Coverage summary found at coverage/coverage-summary.json"
          COVERAGE=$(node -e "const summary=require('./coverage/coverage-summary.json'); console.log(summary.total.lines.pct)")
          echo "Test coverage: ${COVERAGE}%"
          
          COVERAGE_INT=$(echo "$COVERAGE" | awk '{printf "%.0f", $1}')
          
          if [ "$COVERAGE_INT" -lt 80 ]; then
            echo "❌ Coverage ${COVERAGE}% is below minimum threshold of 80%"
            exit 1
          fi
          echo "✅ Coverage requirement met: ${COVERAGE}%"
        else
          echo "⚠️ No coverage summary found"
        fi

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: |
          coverage/
        retention-days: 7

  

  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: |
        if [ -f "package-lock.json" ]; then
          npm ci || npm install
        else
          npm install
        fi

    - name: Build application
      run: npm run build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-files
        path: |
          .next/
          !.next/cache/
        retention-days: 7
