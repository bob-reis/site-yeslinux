name: Tests and Coverage

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    env:
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run ESLint
      run: npm run lint

    - name: Run type checking
      run: npx tsc --noEmit

    - name: Run tests with coverage
      run: npm test -- --coverage || npm test

    - name: Upload coverage to Codecov
      if: matrix.node-version == '20.x' && env.CODECOV_TOKEN != '' && hashFiles('coverage/lcov.info') != ''
      uses: codecov/codecov-action@v4
      with:
        files: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: true

    - name: SonarCloud Scan
      if: matrix.node-version == '20.x' && env.SONAR_TOKEN != ''
      uses: SonarSource/sonarqube-scan-action@v5
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Check coverage threshold
      if: matrix.node-version == '20.x' && hashFiles('coverage/coverage-summary.json') != ''
      run: |
        echo "Coverage summary found at coverage/coverage-summary.json"
        node -e "const summary=require('./coverage/coverage-summary.json'); const pct=summary.total.lines.pct; console.log('Total lines coverage:', pct + '%'); if (pct < 80) { console.error('Coverage below 80%'); process.exit(1); }"

  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build application
      run: npm run build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-files
        path: |
          .next/
          !.next/cache/
        retention-days: 7
